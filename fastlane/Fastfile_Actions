# Fastlane 配置文件用于 GitHub Actions 构建

default_platform(:ios)

platform :ios do
  
  desc "构建 IPA 用于 GitHub Actions"
  lane :build_for_actions do |options|
    
    # 获取参数
    configuration = options[:configuration] || "Release"
    
    # 设置 App Store Connect API Key
    api_key = app_store_connect_api_key(
      key_id: ENV['APPSTORE_API_KEY_ID'],
      issuer_id: ENV['APPSTORE_ISSUER_ID'],
      key_content: ENV['APPSTORE_API_PRIVATE_KEY'],
      is_key_content_base64: false,
      in_house: false
    )
    
    # 导入证书
    if ENV['CERTIFICATES_P12'] && ENV['CERTIFICATES_P12_PASSWORD']
      import_certificate(
        certificate_path: "certificate.p12",
        certificate_password: ENV['CERTIFICATES_P12_PASSWORD'],
        keychain_name: "build.keychain",
        keychain_password: ""
      )
    end
    
    # 更新项目设置
    update_code_signing_settings(
      use_automatic_signing: true,
      team_id: "7RV2Y67HF6",
      path: "xdrip.xcodeproj"
    )
    
    # 获取配置文件
    sigh(
      api_key: api_key,
      app_identifier: [
        "com.7RV2Y67HF6.xdripswiftt1li23",
        "com.7RV2Y67HF6.xdripswiftt1li23.xDripWidget",
        "com.7RV2Y67HF6.xdripswiftt1li23.xDripNotificationContextExtension",
        "com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp",
        "com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp.xDripWatchComplication"
      ],
      force: true,
      readonly: false
    )
    
    # 构建应用
    gym(
      workspace: "xdrip.xcworkspace",
      scheme: "xdrip",
      configuration: configuration,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.7RV2Y67HF6.xdripswiftt1li23" => "match AppStore com.7RV2Y67HF6.xdripswiftt1li23",
          "com.7RV2Y67HF6.xdripswiftt1li23.xDripWidget" => "match AppStore com.7RV2Y67HF6.xdripswiftt1li23.xDripWidget",
          "com.7RV2Y67HF6.xdripswiftt1li23.xDripNotificationContextExtension" => "match AppStore com.7RV2Y67HF6.xdripswiftt1li23.xDripNotificationContextExtension",
          "com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp" => "match AppStore com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp",
          "com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp.xDripWatchComplication" => "match AppStore com.7RV2Y67HF6.xdripswiftt1li23.watchkitapp.xDripWatchComplication"
        }
      },
      output_directory: "build/ipa",
      output_name: "xdrip.ipa",
      clean: true,
      include_bitcode: false,
      include_symbols: true
    )
    
    UI.success("✅ IPA 构建成功！")
  end
  
  desc "上传到 TestFlight"
  lane :upload_testflight do
    
    # 设置 App Store Connect API Key
    api_key = app_store_connect_api_key(
      key_id: ENV['APPSTORE_API_KEY_ID'],
      issuer_id: ENV['APPSTORE_ISSUER_ID'],
      key_content: ENV['APPSTORE_API_PRIVATE_KEY'],
      is_key_content_base64: false
    )
    
    # 上传到 TestFlight
    upload_to_testflight(
      api_key: api_key,
      ipa: "build/ipa/xdrip.ipa",
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
    
    UI.success("✅ 已上传到 TestFlight！")
  end
  
end

