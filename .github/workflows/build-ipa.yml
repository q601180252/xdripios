name: Build xDrip iOS IPA

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_configuration:
        description: 'Build configuration'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release
      upload_to_testflight:
        description: 'Upload to TestFlight'
        required: false
        default: false
        type: boolean

env:
  DEVELOPER_TEAM_ID: 7RV2Y67HF6
  BUNDLE_IDENTIFIER: com.7RV2Y67HF6.xdripswift
  APP_GROUP_IDENTIFIER: group.com.7RV2Y67HF6.loopkit.LoopGroup

jobs:
  build-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
        
    - name: Install dependencies
      run: |
        gem install bundler:2.4.19
        bundle install
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -workspace xdrip.xcworkspace -scheme xdrip -resolvePackageDependencies
        
    - name: Set up code signing
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        
    - name: Set up provisioning profile
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: ${{ env.BUNDLE_IDENTIFIER }}
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Build IPA
      run: |
        # 设置构建配置
        BUILD_CONFIG=${INPUT_BUILD_CONFIGURATION:-Release}
        
        # 清理之前的构建
        xcodebuild clean -workspace xdrip.xcworkspace -scheme xdrip
        
        # 构建应用
        xcodebuild archive \
          -workspace xdrip.xcworkspace \
          -scheme xdrip \
          -configuration $BUILD_CONFIG \
          -destination "generic/platform=iOS" \
          -archivePath "build/xdrip.xcarchive" \
          CODE_SIGN_STYLE=Manual \
          DEVELOPMENT_TEAM=${{ env.DEVELOPER_TEAM_ID }} \
          PROVISIONING_PROFILE_SPECIFIER=${{ secrets.PROVISIONING_PROFILE_NAME }} \
          CODE_SIGN_IDENTITY="iPhone Distribution"
          
        # 导出 IPA
        xcodebuild -exportArchive \
          -archivePath "build/xdrip.xcarchive" \
          -exportPath "build/ipa" \
          -exportOptionsPlist "ExportOptions.plist"
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: xdrip-ipa-${{ github.sha }}
        path: build/ipa/*.ipa
        retention-days: 30
        
    - name: Upload to TestFlight
      if: ${{ inputs.upload_to_testflight == 'true' }}
      uses: Apple-Actions/upload-testflight-build@v1
      with:
        app-path: build/ipa/*.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      id: create_release
      
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/ipa/*.ipa
        asset_name: xdrip-${{ github.ref_name }}.ipa
        asset_content_type: application/octet-stream
