name: Build xDrip iOS IPA

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_configuration:
        description: 'Build configuration'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release
      upload_to_testflight:
        description: 'Upload to TestFlight'
        required: false
        default: false
        type: boolean

env:
  DEVELOPER_TEAM_ID: 7RV2Y67HF6
  BUNDLE_IDENTIFIER: com.7RV2Y67HF6.xdripswift
  APP_GROUP_IDENTIFIER: group.com.7RV2Y67HF6.loopkit.LoopGroup

jobs:
  build-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
        
    - name: Install dependencies
      run: |
        gem install bundler:2.4.19
        bundle install
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -workspace xdrip.xcworkspace -scheme xdrip -resolvePackageDependencies
        
    - name: Build IPA with Automatic Code Signing
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      run: |
        # 设置构建配置
        BUILD_CONFIG=${{ inputs.build_configuration || 'Release' }}
        
        # 创建 API Key 文件
        mkdir -p ~/private_keys
        echo "$APP_STORE_CONNECT_API_KEY_KEY" > ~/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_KEY_ID.p8
        
        # 清理之前的构建
        xcodebuild clean -workspace xdrip.xcworkspace -scheme xdrip
        
        # 构建应用（使用自动代码签名）
        xcodebuild archive \
          -workspace xdrip.xcworkspace \
          -scheme xdrip \
          -configuration $BUILD_CONFIG \
          -destination "generic/platform=iOS" \
          -archivePath "build/xdrip.xcarchive" \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_KEY_ID.p8 \
          -authenticationKeyID $APP_STORE_CONNECT_API_KEY_KEY_ID \
          -authenticationKeyIssuerID $APP_STORE_CONNECT_API_KEY_ISSUER_ID \
          CODE_SIGN_STYLE=Automatic \
          DEVELOPMENT_TEAM=${{ env.DEVELOPER_TEAM_ID }}
          
        # 导出 IPA
        xcodebuild -exportArchive \
          -archivePath "build/xdrip.xcarchive" \
          -exportPath "build/ipa" \
          -exportOptionsPlist "ExportOptions.plist" \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_KEY_ID.p8 \
          -authenticationKeyID $APP_STORE_CONNECT_API_KEY_KEY_ID \
          -authenticationKeyIssuerID $APP_STORE_CONNECT_API_KEY_ISSUER_ID
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: xdrip-ipa-${{ github.sha }}
        path: build/ipa/*.ipa
        retention-days: 30
        
    - name: Upload to TestFlight
      if: ${{ inputs.upload_to_testflight == 'true' }}
      uses: Apple-Actions/upload-testflight-build@v1
      with:
        app-path: build/ipa/*.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      id: create_release
      
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/ipa/*.ipa
        asset_name: xdrip-${{ github.ref_name }}.ipa
        asset_content_type: application/octet-stream
