name: Build xDrip iOS IPA (with Fastlane Match)

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_configuration:
        description: 'Build configuration'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release

env:
  DEVELOPER_TEAM_ID: 7RV2Y67HF6
  BUNDLE_IDENTIFIER: com.7RV2Y67HF6.xdripswift

jobs:
  build-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: false
        
    - name: Install dependencies
      run: |
        gem install bundler
        bundle lock --update
        bundle install
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -workspace xdrip.xcworkspace -scheme xdrip -resolvePackageDependencies
        
    - name: Setup Fastlane Match with GitHub PAT
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        GH_PAT: ${{ secrets.GH_PAT }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        TEAMID: ${{ env.DEVELOPER_TEAM_ID }}
        FASTLANE_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        FASTLANE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        FASTLANE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      run: |
        echo "🔐 配置 Fastlane Match..."
        
        # 设置 Match 环境变量
        echo "MATCH_PASSWORD=$MATCH_PASSWORD" >> $GITHUB_ENV
        echo "GH_PAT=$GH_PAT" >> $GITHUB_ENV
        echo "GITHUB_REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_ENV
        echo "TEAMID=$TEAMID" >> $GITHUB_ENV
        echo "FASTLANE_KEY_ID=$FASTLANE_KEY_ID" >> $GITHUB_ENV
        echo "FASTLANE_ISSUER_ID=$FASTLANE_ISSUER_ID" >> $GITHUB_ENV
        
        # 处理多行的 FASTLANE_KEY (p8 文件内容)
        {
          echo "FASTLANE_KEY<<EOF"
          echo "$FASTLANE_KEY"
          echo "EOF"
        } >> $GITHUB_ENV
        
        echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        
        # 设置 Match 只读模式(不创建新证书)
        echo "MATCH_READONLY=true" >> $GITHUB_ENV
        
        echo "✅ Fastlane Match 环境配置完成"
        
    - name: Download Certificates and Profiles with Fastlane Match
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        GH_PAT: ${{ secrets.GH_PAT }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        TEAMID: ${{ env.DEVELOPER_TEAM_ID }}
      run: |
        echo "📥 使用 Fastlane Match 下载证书和 Provisioning Profiles..."
        
        # 使用 Match 下载证书和 Profiles
        bundle exec fastlane match appstore \
          --readonly \
          --git_basic_authorization $(echo -n "$GITHUB_REPOSITORY_OWNER:$GH_PAT" | base64) \
          --app_identifier "com.$TEAMID.xdripswift,com.$TEAMID.xdripswift.xDripWidget,com.$TEAMID.xdripswift.watchkitapp,com.$TEAMID.xdripswift.watchkitapp.xDripWatchComplication,com.$TEAMID.xdripswift.xDripNotificationContextExtension"
        
        echo "✅ 证书和 Provisioning Profiles 已下载"
        
    - name: Build IPA with Fastlane
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        GH_PAT: ${{ secrets.GH_PAT }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        TEAMID: ${{ env.DEVELOPER_TEAM_ID }}
        FASTLANE_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        FASTLANE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        FASTLANE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      run: |
        echo "🏗️ 使用 Fastlane 构建 IPA..."
        
        # 使用 Fastlane 构建
        bundle exec fastlane build_xdrip4ios
        
        echo "✅ IPA 构建完成"
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: xdrip-ipa-${{ github.sha }}
        path: "*.ipa"
        retention-days: 30
        
    - name: Upload dSYMs artifact
      uses: actions/upload-artifact@v4
      with:
        name: xdrip-dsyms-${{ github.sha }}
        path: "*.dSYM.zip"
        retention-days: 30
        if-no-files-found: ignore
        
    - name: Upload to TestFlight
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
      env:
        FASTLANE_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        FASTLANE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        FASTLANE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      run: |
        echo "📤 上传到 TestFlight..."
        
        bundle exec fastlane release
        
        echo "✅ 已上传到 TestFlight"
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.ipa
          *.dSYM.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

